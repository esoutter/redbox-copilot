services:
  django-app:
    image: django-app:latest
    build:
      context: .
      dockerfile: ./django_app/Dockerfile
    container_name: redbox-django-app
    depends_on:
      - db
      - minio
    networks:
      - redbox-app-network
    environment:
      # Object storage
      - MINIO_HOST=${MINIO_HOST}
      - MINIO_PORT=${MINIO_PORT}
      - AWS_ACCESS_KEY=${AWS_ACCESS_KEY}
      - AWS_SECRET_KEY=${AWS_SECRET_KEY}
      - AWS_REGION=${AWS_REGION}
      - OBJECT_STORE=${OBJECT_STORE}
      - BUCKET_NAME=${BUCKET_NAME}
      # Django app
      - DEBUG=${DEBUG}
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_LOG_LEVEL=${DJANGO_LOG_LEVEL}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - ENVIRONMENT=${ENVIRONMENT}
      - USE_STREAMING=${USE_STREAMING}
      - COMPRESSION_ENABLED=${COMPRESSION_ENABLED}
      - CONTACT_EMAIL=${CONTACT_EMAIL}
      - CORE_API_HOST=${CORE_API_HOST}
      - CORE_API_PORT=${CORE_API_PORT}
      - EMAIL_BACKEND_TYPE=${EMAIL_BACKEND_TYPE}
      - GOV_NOTIFY_API_KEY=${GOV_NOTIFY_API_KEY}
      - FROM_EMAIL=${FROM_EMAIL}
      - GOVUK_NOTIFY_PLAIN_EMAIL_TEMPLATE_ID=${GOVUK_NOTIFY_PLAIN_EMAIL_TEMPLATE_ID}
      - EMAIL_FILE_PATH=${EMAIL_FILE_PATH}
    volumes:
      - /app/django_app/frontend/node_modules
      - ./django_app:/app/django_app/
    ports:
      - "8090:8090"
  db:
    image: postgres:13
    container_name: redbox-db
    volumes:
      - local_postgres_data:/var/lib/postgresql/data:Z
    networks:
      - redbox-app-network
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
  requirements:
    image: python:3.11
    profiles:
      - utils
    volumes:
      - ./:/app/:z
  mlflow:
    image: mlflow_server
    build:
      context: .
      dockerfile: ./mlflow/Dockerfile
      args:
        - OPENAI_API_KEY=${OPENAI_API_KEY:-}
    container_name: redbox-mlflow
    ports:
      - 5010:5010
      - 5020:5020
  worker:
    image: redbox-worker:latest
    build:
      context: .
      dockerfile: worker/Dockerfile
      args:
        - EMBEDDING_MODEL=${EMBEDDING_MODEL}
    container_name: redbox-worker
    environment:
      - ELASTIC__HOST=${ELASTIC__HOST}
      - ELASTIC__PORT=${ELASTIC__PORT}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - redis
      - elasticsearch
      - minio
    networks:
      - redbox-app-network
    restart: unless-stopped
  core-api:
    image: redbox-core-api:latest
    build:
      context: .
      dockerfile: core_api/Dockerfile
      args:
        - EMBEDDING_MODEL=${EMBEDDING_MODEL:-}
    container_name: redbox-core-api
    ports:
      - 5002:5002
    environment:
      - PORT=5002
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - redbox-app-network
    depends_on:
      - elasticsearch
      - minio
      - redis
      - worker
    restart: unless-stopped
  minio:
    image: minio/minio
    container_name: redbox-minio
    expose:
      - ${MINIO_PORT}
      - "9001"
    ports:
      - "9000:${MINIO_PORT}"
      - "9001:9001"
    environment:
      - MINIO_ACCESS_KEY=${AWS_ACCESS_KEY}
      - MINIO_SECRET_KEY=${AWS_SECRET_KEY}
    command: server --console-address ":9001" /data
    networks:
      - redbox-app-network
    volumes:
      - ./data/objectstore:/data
  elasticsearch:
    image: elasticsearch:8.12.0
    container_name: redbox-elasticsearch
    volumes:
      - ./data/elastic/:/usr/share/elasticsearch/data:Z
    ports:
      - 9200:${ELASTIC__PORT}
      - 9300:9300
    environment:
      - node.name=${ELASTIC__HOST}
      - ELASTIC_USER=${ELASTIC__USER}
      - ELASTIC_PASSWORD=${ELASTIC__PASSWORD}
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
      - cluster.routing.allocation.disk.threshold_enabled=false
    networks:
      - redbox-app-network
    restart: unless-stopped
  kibana:
    image: kibana:8.12.0
    container_name: redbox-kibana
    ports:
      - 5601:5601
    environment:
      # KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD}
      # ELASTICSEARCH_PASSWORD: ${ELASTIC__PASSWORD}
      # ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"
      # XPACK_SECURITY_ENABLED: "false"
      XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY: 19264f57-b71d-46e1-8f20-33be19131a6c
    networks:
      - redbox-app-network
    depends_on:
      - elasticsearch
    restart: unless-stopped
  redis:
    image: redis:7-alpine
    container_name: redbox-redis
    restart: always
    ports:
      - "6379:${REDIS_PORT}"
    volumes:
      - redis:/data/redis
    networks:
      - redbox-app-network

networks:
  redbox-app-network:
    driver: bridge

volumes:
  elasticsearch:
  redbox-app-data:
  local_postgres_data: {}
  mlflow-data:
  redis:
    driver: local
  redis-insight:
