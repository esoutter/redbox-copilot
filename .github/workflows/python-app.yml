# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    paths:
      - redbox/**
      - core_api/**
      - worker/**
      - Makefile
      - poetry.lock
      - .github/**
    branches:
      - 'main'
      - 'feature/**'
      - 'chore/**'
      - 'bugfix/**'
      - 'hotfix/**'
      - 'dependabot/**'
      - 'develop'
  workflow_dispatch:

env: 
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  DEV_MODE: true
  ELASTIC__HOST: localhost
  ELASTIC__VERSION: 8.11.0
  ELASTIC__USER: elastic
  ELASTIC__PASSWORD: redboxpass
  ELASTIC__PORT: 9200
  ELASTIC__SCHEME: http
  ELASTIC__SUBSCRIPTION_LEVEL: basic
  KIBANA_SYSTEM_PASSWORD: redboxpass
  METRICBEAT_INTERNAL_PASSWORD: redboxpass
  FILEBEAT_INTERNAL_PASSWORD: redboxpass
  HEARTBEAT_INTERNAL_PASSWORD: redboxpass
  MONITORING_INTERNAL_PASSWORD: redboxpass
  BEATS_SYSTEM_PASSWORD: redboxpass
  EMBEDDING_MODEL: paraphrase-albert-small-v2
  EMBED_QUEUE_NAME: redbox-embedder-queue
  INGEST_QUEUE_NAME: redbox-ingester-queue
  REDIS_HOST: localhost
  REDIS_PORT: 6379
  MINIO_HOST: localhost
  MINIO_PORT: 9000
  AWS_ACCESS_KEY: minioadmin
  AWS_SECRET_KEY: minioadmin
  AWS_REGION: eu-west-2
  OBJECT_STORE: moto
  BUCKET_NAME: redbox-storage-dev
  DEBUG: True
  DJANGO_SETTINGS_MODULE: redbox_app.settings
  DJANGO_SECRET_KEY: 1n53cur3K3y
  DJANGO_LOG_LEVEL: WARNING
  POSTGRES_HOST: localhost
  POSTGRES_USER: redbox-core
  POSTGRES_DB: redbox-core
  POSTGRES_PASSWORD: insecure
  ENVIRONMENT: LOCAL
  USE_STREAMING: False
  COMPRESSION_ENABLED: False
  CONTACT_EMAIL: redbox-copilot@cabinetoffice.gov.uk
  CORE_API_HOST: http://localhost
  CORE_API_PORT: 5002
  EMAIL_BACKEND_TYPE: FILE
  GOV_NOTIFY_API_KEY: f4k3_k3y
  FROM_EMAIL: test@example.com
  GOVUK_NOTIFY_PLAIN_EMAIL_TEMPLATE_ID: example-id
  EMAIL_FILE_PATH: '/app/mail'

permissions:
  contents: read

jobs:
  test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"

    - name: Set up Poetry
      uses: abatilo/actions-poetry@v2
      with:
        poetry-version: 1.7.0

    - name: Build Containers
      run: |
        mkdir -p data/elastic/
        chmod 777 data/elastic/
        docker compose up -d --wait elasticsearch

        poetry install --no-root --no-ansi --with dev --without ai,api,worker
        poetry run download-model --embedding_model paraphrase-albert-small-v2

    - name: Add dependencies for worker
      run: |
        sudo apt update && sudo apt-get install -y \
        poppler-utils \
        tesseract-ocr

    - name: Test redbox with pytest
      run: |
        make test-redbox

    - name: Test worker with pytest
      run: |
        make test-worker

    - name: Test core with pytest
      run: |
        make test-core-api


  static_checks:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"

    - name: Set up Poetry
      uses: abatilo/actions-poetry@v2
      with:
        poetry-version: 1.7.0

    - name: Install dependencies
      run: |
        poetry install --no-root --no-ansi --only dev

    - name: Format code
      run: |
        poetry run ruff format . --check
        poetry run ruff check .

    - name: Type check
      run: |
        make checktypes
